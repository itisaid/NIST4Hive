/*  EMBEDDED C (file "DML050.PC")  */

/*****************************************************************/
/*                                                               */
/*                  COMMENT SECTION                              */
/*                                                               */
/*  DATE 1988/12/09 EMBEDDED C LANGUAGE                          */
/*  NIST SQL VALIDATION TEST SUITE V6.0                          */
/*  DISCLAIMER:                                                  */
/*  This program was written by employees of NIST to test SQL    */
/*  implementations for conformance to the SQL standards.        */
/*  NIST assumes no responsibility for any party's use of        */
/*  this program.                                                */
/*                                                               */
/*  DML050.PC                                                    */
/*  WRITTEN BY: HU YANPING                                       */
/*                                                               */
/*    THIS ROUTINE TESTS THE LIMIT THE NUMBER OF TABLES DIRECTLY */
/*  OR INDIRECTLY REFERENCED IN A STATEMENT. THIS LIMIT IS NOT   */
/*  LESS THAN TEN(10).                                           */
/*                                                               */
/*  REFERENCES                                                   */
/*        AMERICAN NATIONAL STANDARD database language - SQL     */
/*                          X3.135-1989                          */
/*                                                               */
/*           FIPS PUB 127-1, Section 13.5                        */
/*           Sizing for database constructs                      */
/*                                                               */
/*****************************************************************/

#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>

EXEC SQL BEGIN DECLARE SECTION;
     char     EMPNO1[4];
     char     EMPNA1[21];
char uid[19];
char uidx[19];
EXEC SQL END DECLARE SECTION;
long SQLCODE;
int errcnt;
/* date_time declaration */
time_t cal;
     long    i;
     long    ii;


main()
{

strcpy(uid,"HU");
AUTHID(uid);
strcpy(uidx,"not logged in, not");
EXEC SQL SELECT USER INTO :uidx FROM HU.ECCO;
if (strncmp(uid,uidx,2) != 0)
   {
    printf("ERROR: User %s expected.  User %s connected\n",uid,uidx);
    exit(99);
   }
errcnt = 0;
printf("SQL Test Suite, V6.0, Embedded C, dml050.pc\n");
printf("59-byte ID\n");
printf("TEd Version #\n");
/* date_time print */
time (&cal);
printf ("\n Time Run:  %s\n", ctime (&cal));

/******************** BEGIN TEST0226 ********************/
 

printf("          FIPS sizing TEST0226 \n");
printf("     Number of tables directly or indirectly \n");
printf("            referenced in a statement (10) \n");
printf("     - - - - - - - - - - - - - - - - - - -\n\n");

EXEC SQL DECLARE T10 CURSOR FOR
     SELECT EMPNUM, EMPNAME 
     FROM STAFF 
     WHERE EMPNUM IN 
       (SELECT EMPNUM  FROM WORKS 
        WHERE PNUM IN 
          (SELECT PNUM  FROM PROJ 
           WHERE PTYPE IN 
             (SELECT PTYPE  FROM PROJ 
              WHERE PNUM IN 
                (SELECT PNUM  FROM WORKS 
                 WHERE EMPNUM IN 
                   (SELECT EMPNUM  FROM WORKS 
                    WHERE PNUM IN 
                      (SELECT PNUM   FROM PROJ 
                       WHERE PTYPE IN
                         (SELECT PTYPE  FROM PROJ
                          WHERE CITY IN
                            (SELECT CITY  FROM STAFF
                             WHERE EMPNUM IN
                               (SELECT EMPNUM  FROM WORKS
                                WHERE HOURS = 20 
                                AND PNUM = 'P2' )))))))));

EXEC SQL OPEN T10;
i = 0;
if (SQLCODE == 0)
     printf ("EMPNUM     EMPNAME          \n");

for (ii=1;ii<20;ii++)
     {
     EXEC SQL FETCH T10 INTO
               :EMPNO1,:EMPNA1;
     if (SQLCODE == 0)
       {
          printf ("%s       %s\n",EMPNO1,EMPNA1);
          i = i + 1;
       }
     }

EXEC SQL CLOSE T10;

printf("     Here i should be 4; i=%ld \n",i);
if (i==4)
     {
       printf("\n\n               *** pass *** \n\n");
       EXEC SQL INSERT INTO TESTREPORT
          VALUES('0226','pass','PC');
     }
else
     {
       printf("\n\n     dml050.pc  *** fail *** \n\n");
       EXEC SQL INSERT INTO TESTREPORT
          VALUES('0226','fail','PC');
          errcnt = errcnt + 1;
     }

printf("====================================================\n\n");

EXEC SQL COMMIT WORK;

/******************** END TEST0226 ********************/

exit(errcnt);

}
