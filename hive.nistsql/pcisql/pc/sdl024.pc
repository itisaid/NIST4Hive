/*  EMBEDDED C (file "SDL024.PC")  */

/*****************************************************************/
/*                                                               */
/*                  COMMENT SECTION                              */
/*                                                               */
/*  DATE 1988/09/14 EMBEDDED C LANGUAGE                          */
/*  NIST SQL VALIDATION TEST SUITE V6.0                          */
/*  DISCLAIMER:                                                  */
/*  This program was written by employees of NIST to test SQL    */
/*  implementations for conformance to the SQL standards.        */
/*  NIST assumes no responsibility for any party's use of        */
/*  this program.                                                */
/*                                                               */
/*  SDL024.PC                                                    */
/*  WRITTEN BY: HU YANPING                                       */
/*                                                               */
/*    THIS ROUTINE TESTS THE SCHEMA DEFINITION LANGUAGE FOR SQL. */
/*                                                               */
/*  REFERENCES                                                   */
/*        AMERICAN NATIONAL STANDARD database language - SQL     */
/*                          X3.135-1989                          */
/*                                                               */
/*                  SECTION 6. Schema Definition Language        */
/*                                                               */
/*****************************************************************/


#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>

EXEC SQL BEGIN DECLARE SECTION;
     char     EMPNO1[4];
     long     GRADE1;
     char     USERID[20];
     long     i;
     long     ii;
char uid[19];
char uidx[19];
EXEC SQL END DECLARE SECTION;
long SQLCODE;
int errcnt;
/* date_time declaration */
time_t cal;
     long     i2;


main()
{
     strcpy(uid,"HU");
     AUTHID(uid);
strcpy(uidx,"not logged in, not");
EXEC SQL SELECT USER INTO :uidx FROM HU.ECCO;
if (strncmp(uid,uidx,2) != 0)
   {
    printf("ERROR: User %s expected.  User %s connected\n",uid,uidx);
    exit(99);
   }
errcnt = 0;
printf("SQL Test Suite, V6.0, Embedded C, sdl024.pc\n");
printf("59-byte ID\n");
printf("TEd Version #\n");
/* date_time print */
time (&cal);
printf ("\n Time Run:  %s\n", ctime (&cal));
     printf("                TEST0203         \n");
     printf("        (CREATE VIEW ON A VIEW)   \n");
     printf("  Reference X3.135-89 section 6.9 <view def.>\n");     
     printf("     - - - - - - - - - - - - - - - - - - -\n\n");

     printf(" *** CREATE VIEW STAFFV2_VIEW \n");
     printf(" *** AS SELECT  *  FROM STAFFV2 \n");
     printf(" ***    WHERE  CITY = 'Vienna' \n");

     EXEC SQL SELECT COUNT(*)
              INTO   :i
              FROM   STAFFV2_VIEW;

     EXEC SQL SELECT EMPNUM, GRADE
              INTO  :EMPNO1, :GRADE1
              FROM   STAFFV2_VIEW
              WHERE  EMPNUM = 'E3';

     printf("  EMPNO1 = %s, GRADE1 = %ld \n", EMPNO1, GRADE1);

     EXEC SQL INSERT INTO STAFFV2_VIEW
              VALUES('E7','Gallagher',17,'Vienna');

     i2 = SQLCODE;

     EXEC SQL SELECT COUNT(*)
              INTO   :ii
              FROM   STAFFV2_VIEW;

     EXEC SQL ROLLBACK WORK;

     printf(" i = %ld, ii = %ld, i2 = %ld\n\n", i, ii, i2);
     printf("The correct answer should be i=1, ii=2 & i2=0 \n");

     if ( i == 1 && ii == 2 && i2 == 0 )
       {
          printf("\n\n                *** pass *** \n");
          EXEC SQL INSERT INTO TESTREPORT
          VALUES('0203','pass','PC');
       }
     else
       {
          printf("\n\n       sdl024.pc  *** fail *** \n");
          EXEC SQL INSERT INTO TESTREPORT
          VALUES('0203','fail','PC');
          errcnt = errcnt + 1;
       }
     
     printf("===============================================\n\n");

     EXEC SQL COMMIT WORK;

     exit(errcnt);
}
