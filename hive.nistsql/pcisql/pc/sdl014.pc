/*  EMBEDDED C (file "SDL014.PC")  */

/*****************************************************************/
/*                                                               */
/*                  COMMENT SECTION                              */
/*                                                               */
/*  DATE 1987/12/07 EMBEDDED C LANGUAGE                          */
/*  NIST SQL VALIDATION TEST SUITE V6.0                          */
/*  DISCLAIMER:                                                  */
/*  This program was written by employees of NIST to test SQL    */
/*  implementations for conformance to the SQL standards.        */
/*  NIST assumes no responsibility for any party's use of        */
/*  this program.                                                */
/*                                                               */
/*  SDL014.PC                                                    */
/*  WRITTEN BY: HU YANPING                                       */
/*                                                               */
/*    THIS ROUTINE TESTS THE SCHEMA DEFINITION LANGUAGE FOR SQL. */
/*                                                               */
/*  REFERENCES                                                   */
/*        AMERICAN NATIONAL STANDARD database language - SQL     */
/*                          X3.135-1989                          */
/*                                                               */
/*                  SECTION 6. Schema Definition Language        */
/*                                                               */
/*****************************************************************/


#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>

EXEC SQL BEGIN DECLARE SECTION;
     char     EMPNO1[4];
     char     EMPNA1[21];
     char     USERID[20];
     long     i;
     long     ii;
char uid[19];
char uidx[19];
EXEC SQL END DECLARE SECTION;
long SQLCODE;
int errcnt;
/* date_time declaration */
time_t cal;
     long     i2;
     long     i3;


main()
{
     strcpy(uid,"HU");
     AUTHID(uid);
strcpy(uidx,"not logged in, not");
EXEC SQL SELECT USER INTO :uidx FROM HU.ECCO;
if (strncmp(uid,uidx,2) != 0)
   {
    printf("ERROR: User %s expected.  User %s connected\n",uid,uidx);
    exit(99);
   }
errcnt = 0;
printf("SQL Test Suite, V6.0, Embedded C, sdl014.pc\n");
printf("59-byte ID\n");
printf("TEd Version #\n");
/* date_time print */
time (&cal);
printf ("\n Time Run:  %s\n", ctime (&cal));

     printf("                  TEST0150     \n");
     printf("       (CREATE TABLE with UNIQUE(...))   \n");
     printf(" Reference X3.135-89 section 6.6 <unique ... def.>\n");     
     printf("     - - - - - - - - - - - - - - - - - - -\n\n");

     printf(" *** CREATE TABLE WORKS1 \n");
     printf(" ***             (EMPNUM     CHAR(3)   NOT NULL, \n");
     printf(" ***              PNUM       CHAR(3)   NOT NULL, \n");
     printf(" ***              HOURS      DECIMAL(5), \n");
     printf(" ***              UNIQUE  (EMPNUM,PNUM)) \n");

     EXEC SQL INSERT INTO WORKS1
           VALUES('E1','P2',20);

     EXEC SQL INSERT INTO WORKS1
           VALUES('E1','P3',40);

     EXEC SQL SELECT COUNT(*)
               INTO  :i
               FROM  WORKS1;

     EXEC SQL INSERT INTO WORKS1
           VALUES('E1','P2',80);

     EXEC SQL SELECT COUNT(*)
              INTO   :ii
              FROM   WORKS1;

     printf("   i = %ld,  ii = %ld \n",i,ii);

     printf("\n The correct answer should be i=2 & ii=2 \n");

     EXEC SQL ROLLBACK WORK;

     if ( ii == 2 && i == 2 )
       {
          printf("\n\n                *** pass *** \n");
          EXEC SQL INSERT INTO TESTREPORT
          VALUES('0150','pass','PC');
       }
     else
       {
          printf("\n\n       sdl014.pc  *** fail *** \n");
          EXEC SQL INSERT INTO TESTREPORT
          VALUES('0150','fail','PC');
          errcnt = errcnt + 1;
       }
     
     printf("===============================================\n\n");

     EXEC SQL COMMIT WORK;

     exit(errcnt);
}
