/*  EMBEDDED C (file "SUNTAB0.PC")  */

/*****************************************************************/
/*                                                               */
/*                  COMMENT SECTION                              */
/*                                                               */
/*  DATE 1989/04/21 EMBEDDED C LANGUAGE                          */
/*  NIST SQL VALIDATION TEST SUITE V6.0                          */
/*  DISCLAIMER:                                                  */
/*  This program was written by employees of NIST to test SQL    */
/*  implementations for conformance to the SQL standards.        */
/*  NIST assumes no responsibility for any party's use of        */
/*  this program.                                                */
/*                                                               */
/*  SUNTAB0.PC                                                   */
/*  WRITTEN BY: SUN DAJUN                                        */
/*                                                               */
/*   This routine initializes the contents of tables:            */
/*        STAFF, PROJ, and WORKS                                 */
/*   This routine may be run at any time to re-initialize tables.*/
/*                                                               */
/*****************************************************************/

#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>

EXEC SQL BEGIN DECLARE SECTION;
  long i;
  long ii;
  long iii;
char uid[19];
char uidx[19];
EXEC SQL END DECLARE SECTION;
long SQLCODE;
int errcnt;
/* date_time declaration */
time_t cal;

main()
{
strcpy(uid,"SUN");
AUTHID(uid);
errcnt = 0;
printf("SQL Test Suite, V6.0, Embedded C, suntab0.pc\n");
printf("59-byte ID\n");
printf("TEd Version #\n");
/* date_time print */
time (&cal);
printf ("\n Time Run:  %s\n", ctime (&cal));

EXEC SQL DELETE FROM STAFF;
EXEC SQL DELETE FROM PROJ;
EXEC SQL DELETE FROM WORKS;

EXEC SQL INSERT INTO STAFF VALUES ('E1','Alice',12,'Deale');
EXEC SQL INSERT INTO STAFF VALUES ('E2','Betty',10,'Vienna');
EXEC SQL INSERT INTO STAFF VALUES ('E3','Carmen',13,'Vienna');
EXEC SQL INSERT INTO STAFF VALUES ('E4','Don',12,'Deale');
EXEC SQL INSERT INTO STAFF VALUES ('E5','Ed',13,'Akron');

EXEC SQL INSERT INTO PROJ VALUES  ('P1','MXSS','Design',10000,'Deale');
EXEC SQL INSERT INTO PROJ VALUES  ('P2','CALM','Code',30000,'Vienna');
EXEC SQL INSERT INTO PROJ VALUES  ('P3','SDP','Test',30000,'Tampa');
EXEC SQL INSERT INTO PROJ VALUES  ('P4','SDP','Design',20000,'Deale');
EXEC SQL INSERT INTO PROJ VALUES  ('P5','IRM','Test',10000,'Vienna');
EXEC SQL INSERT INTO PROJ VALUES  ('P6','PAYR','Design',50000,'Deale');

EXEC SQL INSERT INTO WORKS VALUES  ('E1','P1',40);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P2',20);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P3',80);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P4',20);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P5',12);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P6',12);
EXEC SQL INSERT INTO WORKS VALUES  ('E2','P1',40);
EXEC SQL INSERT INTO WORKS VALUES  ('E2','P2',80);
EXEC SQL INSERT INTO WORKS VALUES  ('E3','P2',20);
EXEC SQL INSERT INTO WORKS VALUES  ('E4','P2',20);
EXEC SQL INSERT INTO WORKS VALUES  ('E4','P4',40);
EXEC SQL INSERT INTO WORKS VALUES  ('E4','P5',80);

EXEC SQL SELECT COUNT(*) INTO :i   FROM PROJ;
EXEC SQL SELECT COUNT(*) INTO :ii  FROM STAFF;
EXEC SQL SELECT COUNT(*) INTO :iii FROM WORKS;

if (i == 6 && ii == 5 && iii == 12)
  {
  printf("PROJ, STAFF, WORKS were created successfully!\n");
  }
else
  {
    printf("*************************************\n");
    printf("*  PROJ, STAFF or WORKS ERROR !!!   *\n");
    printf("*************************************\n");
  }

EXEC SQL COMMIT WORK;

exit(errcnt);

}


