/*  EMBEDDED C (file "XBASETAB.PC")  */

/*   Copyright 1994, 1995 X/Open Company Limited  */

/*   All rights reserved. No part of this source code may be reproduced,    */
/*   stored in a retrieval system, or transmitted, in any form or by means, */
/*   electronic, mechanical, photocopying, recording or otherwise, except   */
/*   as stated in the end-user license agreement, without the prior         */ 
/*   permission of the copyright owners.                                    */

/*   X/Open and the 'X' symbol are registered trademarks of X/Open Company  */
/*   Limited in the UK and other countries.                                 */


/*****************************************************************/
/*                                                               */
/*                  COMMENT SECTION                              */
/*                                                               */
/*  DATE 1994/03/21 EMBEDDED C LANGUAGE                          */
/*  X/Open SQL VALIDATION ALPHA TEST SUITE V1.0                  */
/*                                                               */
/*  XBASETAB.PC                                                  */
/*  WRITTEN BY: Colin O'Driscoll                                 */
/*                                                               */
/*   This routine initializes the contents of tables:            */
/*        STAFF, PROJ, WORKS, STAFF3, VTABLE, and UPUNIQ         */
/*   This routine may be run at any time to re-initialize tables.*/
/*                                                               */
/*  DATE PROGRAM LAST CHANGED   22/07/94                         */
/*                                                               */
/*****************************************************************/

#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
EXEC SQL BEGIN DECLARE SECTION;
  long i;
  long ii;
  long iii;
char uid[19];
char uidx[19];
EXEC SQL END DECLARE SECTION;

extern int AUTHID();
long SQLCODE;
int errcnt;
/* date_time declaration */
time_t cal;

main()
{
strcpy(uid,"XOPEN1");
AUTHID(uid);
errcnt = 0;
printf("X/OPEN Extensions SQL Test Suite, V6.0, Embedded C, xbasetab.pc\n");
printf("59-byte ID\n");
printf("TEd Version #\n");
/* date_time print */
time (&cal);
printf ("\n Time Run:  %s\n", ctime (&cal));

EXEC SQL DELETE FROM XOPEN1.ECCO;
EXEC SQL INSERT INTO XOPEN1.ECCO VALUES ('NL');

EXEC SQL DELETE FROM STAFF;
EXEC SQL DELETE FROM PROJ;
EXEC SQL DELETE FROM WORKS;

EXEC SQL INSERT INTO STAFF VALUES ('E1','Alice',12,'Deale');
EXEC SQL INSERT INTO STAFF VALUES ('E2','Betty',10,'Vienna');
EXEC SQL INSERT INTO STAFF VALUES ('E3','Carmen',13,'Vienna');
EXEC SQL INSERT INTO STAFF VALUES ('E4','Don',12,'Deale');
EXEC SQL INSERT INTO STAFF VALUES ('E5','Ed',13,'Akron');

EXEC SQL INSERT INTO PROJ VALUES  ('P1','MXSS','Design',10000,'Deale');
EXEC SQL INSERT INTO PROJ VALUES  ('P2','CALM','Code',30000,'Vienna');
EXEC SQL INSERT INTO PROJ VALUES  ('P3','SDP','Test',30000,'Tampa');
EXEC SQL INSERT INTO PROJ VALUES  ('P4','SDP','Design',20000,'Deale');
EXEC SQL INSERT INTO PROJ VALUES  ('P5','IRM','Test',10000,'Vienna');
EXEC SQL INSERT INTO PROJ VALUES  ('P6','PAYR','Design',50000,'Deale');

EXEC SQL INSERT INTO WORKS VALUES  ('E1','P1',40);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P2',20);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P3',80);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P4',20);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P5',12);
EXEC SQL INSERT INTO WORKS VALUES  ('E1','P6',12);
EXEC SQL INSERT INTO WORKS VALUES  ('E2','P1',40);
EXEC SQL INSERT INTO WORKS VALUES  ('E2','P2',80);
EXEC SQL INSERT INTO WORKS VALUES  ('E3','P2',20);
EXEC SQL INSERT INTO WORKS VALUES  ('E4','P2',20);
EXEC SQL INSERT INTO WORKS VALUES  ('E4','P4',40);
EXEC SQL INSERT INTO WORKS VALUES  ('E4','P5',80);

EXEC SQL SELECT COUNT(*) INTO :i   FROM PROJ;
EXEC SQL SELECT COUNT(*) INTO :ii  FROM STAFF;
EXEC SQL SELECT COUNT(*) INTO :iii FROM WORKS;

if (i == 6 && ii == 5 && iii == 12)
  {
  printf("PROJ, STAFF, WORKS were created successfully!\n");
  }
else
  {
    errcnt = errcnt + 1;
    printf("*************************************\n");
    printf("*  PROJ, STAFF or WORKS ERROR !!!   *\n");
    printf("*************************************\n");
  }

EXEC SQL COMMIT WORK;

exit(errcnt);

}

