/*  EMBEDDED C (file "CCC006.PC")  */

/*****************************************************************/
/*                                                               */
/*                  COMMENT SECTION                              */
/*                                                               */
/*  DATE 1988/08/23 EMBEDDED C LANGUAGE                          */
/*  NIST SQL VALIDATION TEST SUITE V6.0                          */
/*  DISCLAIMER:                                                  */
/*  This program was written by employees of NIST to test SQL    */
/*  implementations for conformance to the SQL standards.        */
/*  NIST assumes no responsibility for any party's use of        */
/*  this program.                                                */
/*                                                               */
/*  CCC006.PC                                                    */
/*  WRITTEN BY: HU YANPING                                       */
/*                                                               */
/*  THIS PROGRAM TESTS THE C AUTO STORAGE CLASS.                 */
/*                                                               */
/*  REFERENCES                                                   */
/*        AMERICAN NATIONAL STANDARD database language           */
/*        Embedded SQL --   X3.168-1989                          */
/*                                                               */
/*                 <embedded SQL C program>                      */
/*                                                               */
/*****************************************************************/


#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>

EXEC SQL BEGIN DECLARE SECTION;
          char PNO1[4];
          char EMPNO1[4];
          long HOURS1;
char uid[19];
char uidx[19];
EXEC SQL END DECLARE SECTION;
long SQLCODE;
int errcnt;
/* date_time declaration */
time_t cal;
          long  i;
          long  total;


main()
{
     strcpy(uid,"HU");
     AUTHID(uid);
strcpy(uidx,"not logged in, not");
EXEC SQL SELECT USER INTO :uidx FROM HU.ECCO;
if (strncmp(uid,uidx,2) != 0)
   {
    printf("ERROR: User %s expected.  User %s connected\n",uid,uidx);
    exit(99);
   }
errcnt = 0;
printf("SQL Test Suite, V6.0, Embedded C, ccc006.pc\n");
printf("59-byte ID\n");
printf("TEd Version #\n");
/* date_time print */
time (&cal);
printf ("\n Time Run:  %s\n", ctime (&cal));
/******************** BEGIN TEST0198 ********************/

     total = 0;
     HOURS1 = 0;

     printf("\n                 TEST0198             \n");
     printf("     C storage class test: auto class     \n");
     printf("     - - - - - - - - - - - - - - - - - - -\n\n");

     printf("    *** EXEC SQL DECLARE X CURSOR \n");
     printf("    ***      FOR SELECT EMPNUM,HOURS \n");
     printf("    ***          FROM   WORKS \n");
     printf("    ***          WHERE  PNUM='P2' \n");
     printf("    ***          ORDER  BY EMPNUM DESC \n");
     printf("    *** EXEC SQL OPEN X \n\n");

     EXEC SQL DECLARE X CURSOR
          FOR SELECT EMPNUM,HOURS
              FROM   WORKS
              WHERE  PNUM='P2'
              ORDER  BY EMPNUM DESC;
     EXEC SQL OPEN X;
     
     for (i=0;i<10;i++)
     {
       fetchrow();
     }

     printf(" HOURS1 = %ld and total = %ld \n\n",HOURS1,total);
     printf("The correct answer should be order by EMPNO1 DESC\n");
     printf(" HOURS1 = 0 and total = 20. \n");

     if (strncmp(EMPNO1,"E1",2) == 0 && HOURS1 == 0 && total == 20)
       {
       EXEC SQL INSERT INTO TESTREPORT
          VALUES('0198','pass','PC');
       printf("\n\n                 *** pass ***     ");
       }
     else
       {
       EXEC SQL INSERT INTO TESTREPORT
          VALUES('0198','fail','PC');
          errcnt = errcnt + 1;
       printf("\n\n       ccc006.pc  *** fail ***     ");
       }
     printf("\n================================================");

     printf("\n\n\n\n");
     EXEC SQL COMMIT WORK;

/******************** END TEST0198 ********************/

     exit(errcnt);

}

fetchrow()
{
     EXEC SQL BEGIN DECLARE SECTION;
          auto long HOURS2;
     EXEC SQL END DECLARE SECTION;
          auto long total1 = 0;


     EXEC SQL FETCH X INTO :EMPNO1,:HOURS2;
     if (SQLCODE == 0)
       {
         total1 = total1 + HOURS2;
         printf("          EMPNO1=%s and HOURS2=%ld \n",EMPNO1,HOURS2);
         total = total1;
       }

}
