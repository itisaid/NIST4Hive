/*  EMBEDDED C (file "DML072.PC")  */

/*****************************************************************/
/*                                                               */
/*                  COMMENT SECTION                              */
/*                                                               */
/*  DATE 1989/08/21 EMBEDDED C LANGUAGE                          */
/*  NIST SQL VALIDATION TEST SUITE V6.0                          */
/*  DISCLAIMER:                                                  */
/*  This program was written by employees of NIST to test SQL    */
/*  implementations for conformance to the SQL standards.        */
/*  NIST assumes no responsibility for any party's use of        */
/*  this program.                                                */
/*                                                               */
/*  DML072.PC                                                    */
/*  WRITTEN BY: SUN DAJUN                                        */
/*                                                               */
/*    THIS ROUTINE TESTS MISCELLANEOUS FEATURES                  */
/*                                                               */
/*  REFERENCES                                                   */
/*        AMERICAN NATIONAL STANDARD database language -         */
/*        X3.135-1989, 8.10, GR 9 c)                             */
/*                                                               */
/*****************************************************************/


#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>

EXEC SQL BEGIN DECLARE SECTION;
  char EMPNO1[11];
  long GRD1;
char uid[19];
char uidx[19];
EXEC SQL END DECLARE SECTION;
long SQLCODE;
int errcnt;
/* date_time declaration */
time_t cal;
long cnt;
long count1;


main()
{

strcpy(uid,"HU");
AUTHID(uid);
strcpy(uidx,"not logged in, not");
EXEC SQL SELECT USER INTO :uidx FROM HU.ECCO;
if (strncmp(uid,uidx,2) != 0)
   {
    printf("ERROR: User %s expected.  User %s connected\n",uid,uidx);
    exit(99);
   }
errcnt = 0;
printf("SQL Test Suite, V6.0, Embedded C, dml072.pc\n");
printf("59-byte ID\n");
printf("TEd Version #\n");
/* date_time print */
time (&cal);
printf ("\n Time Run:  %s\n", ctime (&cal));


/******************** BEGIN TEST0390 ********************/


printf("\n                   TEST0390          \n");
printf("  Short char column value blank_padded in larger variables\n");
printf("Reference: ANSI X3.168-1989 9.4 SR 4) c)\n");
printf("   - - - - - - - - - - - - - - - - - - - - - - -\n\n");

strcpy (EMPNO1, "xxxxxxxxxx");
EXEC SQL SELECT EMPNUM, GRADE INTO :EMPNO1, :GRD1 FROM STAFF
         WHERE EMPNUM = 'E1';
count1 = 0;
for (cnt = 2; cnt < 11; cnt++)
   {
       if (EMPNO1[cnt] == ' ')
          count1 = count1 + 1;
   }
printf("The correct answer is:\n");
printf("        E1        ,   12, 8\n");
printf("Your answer is:\n");
printf("        %s,  %ld, %ld\n", EMPNO1, GRD1, count1);
if (GRD1 == 12 && count1 == 8 && strcmp(EMPNO1, "E1        ") == 0)
{
  printf("\n\n             *** pass *** \n\n");
  EXEC SQL INSERT INTO TESTREPORT
    VALUES('0390','pass','PC');
}
else
{
  printf("\n\n   dml072.pc  *** fail *** \n\n");
  EXEC SQL INSERT INTO TESTREPORT
    VALUES('0390','fail','PC');
          errcnt = errcnt + 1;
}
printf("====================================================\n\n");
EXEC SQL COMMIT WORK;

/******************** END TEST0390 ********************/





exit(errcnt);
}
