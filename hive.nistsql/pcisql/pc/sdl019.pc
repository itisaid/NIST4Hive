/*  EMBEDDED C (file "SDL019.PC")  */

/*****************************************************************/
/*                                                               */
/*                  COMMENT SECTION                              */
/*                                                               */
/*  DATE 1988/06/22 EMBEDDED C LANGUAGE                          */
/*  NIST SQL VALIDATION TEST SUITE V6.0                          */
/*  DISCLAIMER:                                                  */
/*  This program was written by employees of NIST to test SQL    */
/*  implementations for conformance to the SQL standards.        */
/*  NIST assumes no responsibility for any party's use of        */
/*  this program.                                                */
/*                                                               */
/*  SDL019.PC                                                    */
/*  WRITTEN BY: HU YANPING                                       */
/*                                                               */
/*     THIS ROUTINE TESTS THE UNIQUE CONSTRAINT VIOLATION IN     */
/*  WHICH THERE ARE SOME ROWS THAT ARE UNIQUE.                   */
/*                                                               */
/*  REFERENCES                                                   */
/*        AMERICAN NATIONAL STANDARD database language - SQL     */
/*                          X3.135-1989                          */
/*                                                               */
/*                    SECTION 3.3 Conventions -- for SQLCODE     */
/*                    SECTION 6.6 <unique constraint def.>       */
/*                                                               */
/*****************************************************************/

#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>

EXEC SQL BEGIN DECLARE SECTION;
     long i;
     long ii;
     long iii;
char uid[19];
char uidx[19];
EXEC SQL END DECLARE SECTION;
long SQLCODE;
int errcnt;
/* date_time declaration */
time_t cal;


main()
{
     strcpy(uid,"HU");
     AUTHID(uid);
strcpy(uidx,"not logged in, not");
EXEC SQL SELECT USER INTO :uidx FROM HU.ECCO;
if (strncmp(uid,uidx,2) != 0)
   {
    printf("ERROR: User %s expected.  User %s connected\n",uid,uidx);
    exit(99);
   }
errcnt = 0;
printf("SQL Test Suite, V6.0, Embedded C, sdl019.pc\n");
printf("59-byte ID\n");
printf("TEd Version #\n");
/* date_time print */
time (&cal);
printf ("\n Time Run:  %s\n", ctime (&cal));
     
     printf("                   TEST0155             \n");
     printf("Reference X3.135-1989 section 6.6 General Rules\n");     
     printf("     - - - - - - - - - - - - - - - - - - -\n\n");

     i = 0;
     ii = 0;
     iii = 0;

     EXEC SQL SELECT COUNT(*)
              INTO   :i
              FROM   WORKS;

     EXEC SQL INSERT INTO WORKS
          SELECT 'E3',PNUM,100
          FROM   PROJ;

     ii = SQLCODE;

     EXEC SQL SELECT COUNT(*)
              INTO   :iii
              FROM   WORKS;

     EXEC SQL ROLLBACK WORK;
     
     printf(" i = %ld, ii = %ld  , iii = %ld \n\n",i,ii,iii);
     printf("The correct answer should be i=12, ii<0 & iii=12 \n");

     if (i == 12 && ii < 0 && iii == 12)
       {
       EXEC SQL INSERT INTO TESTREPORT
          VALUES('0155','pass','PC');
       printf("\n\n                 *** pass ***     \n");
       }
     else
       {
       EXEC SQL INSERT INTO TESTREPORT
          VALUES('0155','fail','PC');
          errcnt = errcnt + 1;
       printf("\n\n       sdl019.pc  *** fail ***     \n");
       }
     printf("================================================\n\n");
     printf("\n\n\n\n");
                         
     EXEC SQL COMMIT WORK;

     exit(errcnt);

}

