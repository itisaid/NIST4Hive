PREHOOK: query: drop table hive_test_src
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table hive_test_src
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table hive_test_dst
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table hive_test_dst
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table hive_test_src ( col1 string ) stored as textfile
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table hive_test_src ( col1 string ) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@hive_test_src
PREHOOK: query: load data local inpath '../data/files/test.dat' overwrite into table hive_test_src
PREHOOK: type: LOAD
PREHOOK: Output: default@hive_test_src
POSTHOOK: query: load data local inpath '../data/files/test.dat' overwrite into table hive_test_src
POSTHOOK: type: LOAD
POSTHOOK: Output: default@hive_test_src
PREHOOK: query: create table hive_test_dst ( col1 string ) partitioned by ( pcol1 string , pcol2 string) stored as sequencefile
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table hive_test_dst ( col1 string ) partitioned by ( pcol1 string , pcol2 string) stored as sequencefile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@hive_test_dst
PREHOOK: query: insert overwrite table hive_test_dst partition ( pcol1='test_part', pCol2='test_Part') select col1 from hive_test_src
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_src
PREHOOK: Output: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
POSTHOOK: query: insert overwrite table hive_test_dst partition ( pcol1='test_part', pCol2='test_Part') select col1 from hive_test_src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_src
POSTHOOK: Output: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: select * from hive_test_dst where pcol1='test_part' and pcol2='test_Part'
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst where pcol1='test_part' and pcol2='test_Part'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
1	test_part	test_Part
2	test_part	test_Part
3	test_part	test_Part
4	test_part	test_Part
5	test_part	test_Part
6	test_part	test_Part
PREHOOK: query: select count(1) from hive_test_dst
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from hive_test_dst
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
6
PREHOOK: query: insert overwrite table hive_test_dst partition ( pCol1='test_part', pcol2='test_Part') select col1 from hive_test_src
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_src
PREHOOK: Output: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
POSTHOOK: query: insert overwrite table hive_test_dst partition ( pCol1='test_part', pcol2='test_Part') select col1 from hive_test_src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_src
POSTHOOK: Output: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: select * from hive_test_dst where pcol1='test_part' and pcol2='test_part'
PREHOOK: type: QUERY
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst where pcol1='test_part' and pcol2='test_part'
POSTHOOK: type: QUERY
#### A masked pattern was here ####
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: select count(1) from hive_test_dst
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from hive_test_dst
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
6
PREHOOK: query: select * from hive_test_dst where pcol1='test_part'
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst where pcol1='test_part'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
1	test_part	test_Part
2	test_part	test_Part
3	test_part	test_Part
4	test_part	test_Part
5	test_part	test_Part
6	test_part	test_Part
PREHOOK: query: select * from hive_test_dst where pcol1='test_part' and pcol2='test_part'
PREHOOK: type: QUERY
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst where pcol1='test_part' and pcol2='test_part'
POSTHOOK: type: QUERY
#### A masked pattern was here ####
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: select * from hive_test_dst where pcol1='test_Part'
PREHOOK: type: QUERY
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst where pcol1='test_Part'
POSTHOOK: type: QUERY
#### A masked pattern was here ####
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: describe extended hive_test_dst
PREHOOK: type: DESCTABLE
POSTHOOK: query: describe extended hive_test_dst
POSTHOOK: type: DESCTABLE
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
col1	string	
pcol1	string	
pcol2	string	
	 	 
#### A masked pattern was here ####
PREHOOK: query: drop table hive_test_src
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@hive_test_src
PREHOOK: Output: default@hive_test_src
POSTHOOK: query: drop table hive_test_src
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@hive_test_src
POSTHOOK: Output: default@hive_test_src
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: drop table hive_test_dst
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@hive_test_dst
PREHOOK: Output: default@hive_test_dst
POSTHOOK: query: drop table hive_test_dst
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@hive_test_dst
POSTHOOK: Output: default@hive_test_dst
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
