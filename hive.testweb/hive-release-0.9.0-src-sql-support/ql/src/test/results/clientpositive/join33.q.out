PREHOOK: query: CREATE TABLE dest_j1(key STRING, value STRING, val2 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE dest_j1(key STRING, value STRING, val2 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@dest_j1
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j1
SELECT /*+ MAPJOIN(x) */ x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j1
SELECT /*+ MAPJOIN(x) */ x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME src1) x) (TOK_TABREF (TOK_TABNAME src) y) (= (. (TOK_TABLE_OR_COL x) key) (. (TOK_TABLE_OR_COL y) key))) (TOK_TABREF (TOK_TABNAME srcpart) z) (and (and (= (. (TOK_TABLE_OR_COL x) value) (. (TOK_TABLE_OR_COL z) value)) (= (. (TOK_TABLE_OR_COL z) ds) '2008-04-08')) (= (. (TOK_TABLE_OR_COL z) hr) 11)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest_j1))) (TOK_SELECT (TOK_HINTLIST (TOK_HINT TOK_MAPJOIN (TOK_HINTARGLIST x))) (TOK_SELEXPR (. (TOK_TABLE_OR_COL x) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL z) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL y) value)))))

STAGE DEPENDENCIES:
  Stage-6 is a root stage
  Stage-3 depends on stages: Stage-6
  Stage-1 depends on stages: Stage-3
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-6
    Map Reduce Local Work
      Alias -> Map Local Tables:
        x 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        x 
          TableScan
            alias: x
            GatherStats: false
            HashTable Sink Operator
              condition expressions:
                0 {key} {value}
                1 {value}
              handleSkewJoin: false
              keys:
                0 [Column[key]]
                1 [Column[key]]
              Position of Big Table: 1

  Stage: Stage-3
    Map Reduce
      Alias -> Map Operator Tree:
        y 
          TableScan
            alias: y
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {key} {value}
                1 {value}
              handleSkewJoin: false
              keys:
                0 [Column[key]]
                1 [Column[key]]
              outputColumnNames: _col0, _col1, _col5
              Position of Big Table: 1
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      columns _col0,_col1,_col5
                      columns.types string,string,string
                      escape.delim \
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
      Needs Tagging: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src

  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
                  expr: _col5
                  type: string
            outputColumnNames: _col0, _col1, _col5
            Reduce Output Operator
              key expressions:
                    expr: _col1
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: _col1
                    type: string
              tag: 0
              value expressions:
                    expr: _col5
                    type: string
                    expr: _col0
                    type: string
        z 
          TableScan
            alias: z
            GatherStats: false
            Reduce Output Operator
              key expressions:
                    expr: value
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: value
                    type: string
              tag: 1
              value expressions:
                    expr: value
                    type: string
      Needs Tagging: true
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col0,_col1,_col5
              columns.types string,string,string
              escape.delim \
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col0,_col1,_col5
                columns.types string,string,string
                escape.delim \
#### A masked pattern was here ####
          Partition
            base file name: hr=11
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 2008-04-08
              hr 11
            properties:
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.srcpart
              partition_columns ds/hr
              serialization.ddl struct srcpart { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.srcpart
                partition_columns ds/hr
                serialization.ddl struct srcpart { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcpart
            name: default.srcpart
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col1} {VALUE._col4}
            1 {VALUE._col1}
          handleSkewJoin: false
          outputColumnNames: _col1, _col4, _col9
          Select Operator
            expressions:
                  expr: _col4
                  type: string
                  expr: _col9
                  type: string
                  expr: _col1
                  type: string
            outputColumnNames: _col0, _col1, _col2
            File Output Operator
              compressed: false
              GlobalTableId: 1
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count -1
                    columns key,value,val2
                    columns.types string:string:string
#### A masked pattern was here ####
                    name default.dest_j1
                    serialization.ddl struct dest_j1 { string key, string value, string val2}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.dest_j1
              TotalFiles: 1
              GatherStats: true
              MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value,val2
                columns.types string:string:string
#### A masked pattern was here ####
                name default.dest_j1
                serialization.ddl struct dest_j1 { string key, string value, string val2}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_j1
#### A masked pattern was here ####

  Stage: Stage-2
    Stats-Aggr Operator
#### A masked pattern was here ####


PREHOOK: query: INSERT OVERWRITE TABLE dest_j1
SELECT /*+ MAPJOIN(x) */ x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Output: default@dest_j1
POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1
SELECT /*+ MAPJOIN(x) */ x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Output: default@dest_j1
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from dest_j1 x order by x.key
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_j1
#### A masked pattern was here ####
POSTHOOK: query: select * from dest_j1 x order by x.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_j1
#### A masked pattern was here ####
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
150	val_150	val_150
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
66	val_66	val_66
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
